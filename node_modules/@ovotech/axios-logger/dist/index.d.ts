import { AxiosError, AxiosRequestConfig, AxiosResponse } from 'axios';
export interface AxiosLogger {
    redact?: string[];
    requestStartedAt?: Date;
}
export interface LogMeta {
    uri?: string;
    method?: string;
    requestBody?: any;
    responseBody?: any;
    params: any;
    status: number;
    responseTime: number;
}
export declare const startHeader = "X-Request-Started";
export declare const redactHeader = "X-Redact-Log";
export declare const redactPaths: (paths: string[], object: any) => any;
export declare const getMeta: (response: AxiosResponse<any>) => LogMeta;
export declare const axiosLogger: (log: (level: "error" | "info", meta: LogMeta, config: AxiosRequestConfig) => void) => {
    request: {
        onFulfilled: (config: AxiosRequestConfig) => AxiosRequestConfig;
    };
    response: {
        onFulfilled: (response: AxiosResponse<any>) => AxiosResponse<any>;
        onRejected: (error: AxiosError<any>) => Promise<never>;
    };
};
